name: Build API  

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  deploy_source:

    name: Deploy API Using AWS Lambda
    strategy:
      matrix:
        node-version: [12.x]
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and build
        run: |
          npm install
          npm ci
          npm run build --if-present
        env:
          CI: true

      # Dynamic below here
      - name: /engine/apis/maintainers put lambda deploy zip
        uses: api-search/maintainers-api@main
        with:
          args: zip -qq -r m-s-apis-io-engineapismaintainers-pu.zip paths/engine/apis/maintainers/put/index.js node_modules
      - name: maintainers-api get lambda deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: us-east-1
          function_name: m-s-apis-io-engineapismaintainers-pu
          zip_file: m-s-apis-io-engineapismaintainers-pu.zip
      - name: /maintainers get lambda deploy zip
        uses: api-search/maintainers-api@main
        with:
          args: zip -qq -r m-s-apis-io-maintainers-g.zip paths/maintainers/get/index.js node_modules
      - name: maintainers-api get lambda deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: us-east-1
          function_name: m-s-apis-io-maintainers-g
          zip_file: m-s-apis-io-maintainers-g.zip
      - name: /maintainers post lambda deploy zip
        uses: api-search/maintainers-api@main
        with:
          args: zip -qq -r m-s-apis-io-maintainers-po.zip paths/maintainers/post/index.js node_modules
      - name: maintainers-api get lambda deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: us-east-1
          function_name: m-s-apis-io-maintainers-po
          zip_file: m-s-apis-io-maintainers-po.zip
      - name: /maintainers/{maintainer_id} get lambda deploy zip
        uses: api-search/maintainers-api@main
        with:
          args: zip -qq -r m-s-apis-io-maintainers-maintainer-g.zip paths/maintainers/maintainer_id/get/index.js node_modules
      - name: maintainers-api get lambda deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: us-east-1
          function_name: m-s-apis-io-maintainers-maintainer-g
          zip_file: m-s-apis-io-maintainers-maintainer-g.zip
      - name: /maintainers/{maintainer_id} put lambda deploy zip
        uses: api-search/maintainers-api@main
        with:
          args: zip -qq -r m-s-apis-io-maintainers-maintainer-pu.zip paths/maintainers/maintainer_id/put/index.js node_modules
      - name: maintainers-api get lambda deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: us-east-1
          function_name: m-s-apis-io-maintainers-maintainer-pu
          zip_file: m-s-apis-io-maintainers-maintainer-pu.zip
      - name: /maintainers/{maintainer_id} delete lambda deploy zip
        uses: api-search/maintainers-api@main
        with:
          args: zip -qq -r m-s-apis-io-maintainers-maintainer-d.zip paths/maintainers/maintainer_id/delete/index.js node_modules
      - name: maintainers-api get lambda deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_region: us-east-1
          function_name: m-s-apis-io-maintainers-maintainer-d
          zip_file: m-s-apis-io-maintainers-maintainer-d.zip      